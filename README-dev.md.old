# README

**Roadmap**

* Add tests for "VAL"/"TYPE" (cf. README)
* Add tests for "dune run configuration"
  * Then add executables/names
  * Then test with "odoc" project
  * Then add tests
  * Then add libraries (runConfig starting build)
  * That is to make something flexible before using it for OCaml/...
* ~~Then work on the FileIndex and index files as modules~~
* ~~Test resolving documentation for FQN functions~~
* To work on resolve, you must first
  * Test the indexes and the resolve
  * Work on the possible elements that reference something
* Work on resolve
  * Try to resolve non-FQN functions from stdlib 
  * Implement "open" + modules resolutions (it's important)
  * Try to resolve non-FQN functions from context (e.g. walkback and add opens, then test "openname"+input)
* Add back the editor (doc+REPL actions)
* Add back the REPL
* Add auto completion for FQN

Additional problems

* [ ] The named element should be "x" and not "let x = ..."

#### Documentation

Refer to [odoc](https://ocaml.org/manual/4.12/ocamldoc.html).

* [x] Let
* [x] Type
* [x] Val
* [ ] Handle HTML
* [ ] Show documentation nicely
* [ ] Load the documentation of the parent if none found
* [ ] Reader mode
  * [ ] File comments
  * [ ] Let comments
* [ ] Custom parser+lexer for "odoc"